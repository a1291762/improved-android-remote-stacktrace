// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.1'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 31

    def code = 1

    defaultConfig {
        versionCode code
        versionName "1.0 (" + code + ")"
        //applicationId "com.nullwire.trace"
        minSdkVersion 14
        targetSdkVersion 31
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            // Exclude sub-directories called 'awt' (hint: put all the desktop code into such directories)
            java {
                srcDirs = ['src']
                exclude '**/awt/*'
            }
            resources {
                srcDirs = ['src']
                exclude '**/awt/*'
            }
            aidl {
                srcDirs = ['src']
                exclude '**/awt/*'
            }
            renderscript {
                srcDirs = ['src']
                exclude '**/awt/*'
            }
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        //instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}

dependencies {
}

